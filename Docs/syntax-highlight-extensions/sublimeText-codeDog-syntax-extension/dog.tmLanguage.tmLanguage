<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>$schema</key>
    <string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
    <key>name</key>
    <string>CodeDog Programming Language</string>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#comments</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#comment-inline</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#operators</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#strings</string>
      </dict>
      <dict>
        <key>include</key>
        <string>template-type</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#numbers</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#control-statements</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#reserved-words</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#keywords</string>
      </dict>
      <dict>
        <key>include</key>
        <string>#numeric-literal</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>reserved-words</key>
      <dict>
        <key>name</key>
        <string>entity.name.function.member.dog</string>
        <key>match</key>
        <string>\b(Forward|Backward|Preorder|Inorder|Postorder|BreadthFirst|auto|break|bool|case|char|and|or|const|me|my|our|their|we|withEach|print|WHILE|in|RANGE|continue|do|double|else|but|flag|mode|float|for|if|uint32|int32|uint64|int64|model|struct|string|int|uint|long|return|switch|typedef|void|false|NULL|true|List|Opt|Map|inherits)\b</string>
      </dict>
      <key>control-statements</key>
      <dict>
        <key>name</key>
        <string>keyword.control.flow.dog</string>
        <key>match</key>
        <string>\b(Title|Platform|LinuxBuild|SwingBuild|AndroidBuild|iPhoneBuild|BuildCmd|FileName|Version|CopyrightMesg|Authors|Description|LicenseText|featuresNeeded|runCode|CPU|Lang|optimize|IncludePlatform|Singlefile|Realtime|noWorstCase|codeGenStyle|RamAvailable|CPU-Feature|CPU-Version|Rebug|Release|bits32|bits64|L1Cache|L2Cache|LittleEndian|BigEndian|Memory|Speed|Power|ProgramOrLibrary)\b</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(return)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.flow.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[;}]|$|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|type|var|Title|BuildCmd|FileName|Version|CopyrightMesg|Authors|Description|LicenseText|featuresNeeded|runCode|CPU|Lang|optimize|IncludePlatform|Singlefile|Realtime|noWorstCase|codeGenStyle|RamAvailable|CPU-Feature|CPU-Version|Rebug|Release|bits32|bits64|L1Cache|L2Cache|LittleEndian|BigEndian|Memory|Speed|Power|ProgramOrLibrary)\b))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>operators</key>
      <dict>
        <key>name</key>
        <string>operator.dog</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>%=|\+=|-=|\*=|(?&lt;!\()/=</string>
            <key>name</key>
            <string>keyword.operator.assignment.compound.dog</string>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.unit.suffix.integer.dog</string>
            <key>match</key>
            <string>(^-?[0-9][0-9\.]+$)</string>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#reserved-words</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paren-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control-statements</string>
          </dict>
          <dict>
            <key>include</key>
            <string>template-type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>numeric-literal</string>
          </dict>
        </array>
      </dict>
      <key>paren-expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.dog</string>
              </dict>
            </dict>
            <key>match</key>
            <string>\b(\w+)(?:\s+([-a-zA-Z0-0_]+))?\s*(\()</string>
            <key>name</key>
            <string>punctuation.definition.parameters.dog</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>comment-inline</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>^\s\*\s+</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>/\*</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>name</key>
            <string>comment.block.dog</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^[ \t]+)?(?==//)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>entity.name.tag.inline.dog</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.angle.begin.dog</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.bracket.angle.end.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?!\G)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>//</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.defintion.comment.dog</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>\n</string>
                <key>name</key>
                <string>comment.line.double-slash.dog</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>comments</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.block.documentation.dog</string>
            <key>begin</key>
            <string>/\*\*(?!/)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#docblock</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>comment.block.dog</string>
            <key>begin</key>
            <string>(/\*)(?:\s*((@)internal)(?=\s|(\*/)))?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.internaldeclaration.dog</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.internaldeclaration.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\*/</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>begin</key>
            <string>(^[ \t]+)?((//)(?:\s*((@)internal)(?=\s|$))?)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.whitespace.comment.leading.dog</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>comment.line.double-slash.dog</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.comment.dog</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>storage.type.internaldeclaration.dog</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.internaldeclaration.dog</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$)</string>
            <key>contentName</key>
            <string>comment.line.double-slash.dog</string>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.dog</string>
            <key>match</key>
            <string>\b(if|while|for|return)\b</string>
          </dict>
        </array>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#qstring-single</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#qstring-double</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#template</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#backticks</string>
          </dict>
        </array>
      </dict>
      <key>backticks</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.dog</string>
        <key>begin</key>
        <string>`</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.dog</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\`)|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.dog</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.dog</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>qstring-double</key>
      <dict>
        <key>name</key>
        <string>string.quoted.double.dog</string>
        <key>begin</key>
        <string>"</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.dog</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(")|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.dog</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.dog</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>qstring-single</key>
      <dict>
        <key>name</key>
        <string>string.quoted.single.dog</string>
        <key>begin</key>
        <string>'</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.begin.dog</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(\')|((?:[^\\\n])$)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.string.end.dog</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>invalid.illegal.newline.dog</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string-character-escape</string>
          </dict>
        </array>
      </dict>
      <key>string-character-escape</key>
      <dict>
        <key>name</key>
        <string>constant.character.escape.dog</string>
        <key>match</key>
        <string>\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\{[0-9A-Fa-f]+\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>
      </dict>
      <key>numeric-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.numeric.hex.dog</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.binary.dog</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.numeric.octal.dog</string>
            <key>match</key>
            <string>\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)
(?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.dog</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>9</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>10</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>11</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>12</key>
              <dict>
                <key>name</key>
                <string>meta.delimiter.decimal.period.dog</string>
              </dict>
              <key>13</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
              <key>14</key>
              <dict>
                <key>name</key>
                <string>storage.type.numeric.bigint.dog</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
    </dict>
    <key>scopeName</key>
    <string>source.dog</string>
  </dict>
</plist>