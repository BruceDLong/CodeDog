/- CodeDog Unicode Library
requirements = [
    [tagOneOf, Lang, [Java]]
]

interface={
    provides=[Unicode_implementation]
    libFiles=[]
    headers=[android.icu.util.ULocale, android.icu.text.SimpleDateFormat, android.icu.util.Calendar, android.icu.util.GregorianCalendar]
}

LibDescription  ={
    useStatus   ='dynamic'
    description ='Unicode for Java'
    features    =[Unicode]
    platforms   =[Java]
    bindings    =[Java]
    CPUs        =[JavaVM]
    Lang	=[Java]
}

struct UnicodeStr {me String: UnicodeStr}
struct sysLocale {me ULocale: sysLocale}
struct Udate {me Date: Udate}

struct UnicodeMgr {
    /- form "pt", "BR" is Java compatible while form "pt_BR" is not
    me sysLocale: SetLocale(me string: code) <- <%{
	ULocale location = new ULocale(code);
	return location;
    }%>
    
    me string: dateToIntlString(me timeValue: time, me double: interval, me sysLocale: loc) <- <%{
	Date date = new Date(time);
	String pattern = chooseFormatPattern(interval);
	SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern, loc);
	String uniLabel = simpleDateFormat.format(date);
	return uniLabel;
    }%>
    
    me timeValue: epocTimeFromDateTime(me int: year, me int: month, me int: date, me int: hour, me int: minute, me int: second) <- <%{
        Calendar cal = new GregorianCalendar(year, month, date, hour, minute, second);
        long retval = cal.getTimeInMillis();
        return retval;
    }%>
    
    me string: getHour(me long: date, me sysLocale: loc) <- <%{
	String pattern = "k";   /- k: hour in day (1~24)
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern, loc);
        String hour = simpleDateFormat.format(date);
        return hour;
    }%>

    me string: customPatternDateTime(me timeValue: time, me UnicodeStr: pattern, me string: locPat) <- <%{
        Date date = new Date(time);
        ULocale loc = new ULocale(locPat);
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern, loc);
        String uniLabel = simpleDateFormat.format(date);
        return uniLabel;
    }%>


}

