// CodeDog Thread Library

requirements = [
    [require, threads_implementation]
]

interface={
    provides=[Threads]
    libFiles=[]
    headers=[] //threads
}

LibDescription  ={
    useStatus   = dynamic
    description ='Library for multi-thread programming'
    features    =[Threads]
    platforms   =[Linux, OS-X_Devices, Windows]
}

struct GLOBAL{
    me string: thisThreadID()
}
struct Threads{
    me bool: notDone <- true
    void: run()
    void: setName(me string: Name)
    bool: isActive()
    void: start()
    void: waitForExit()
    void: requestClose() <- {notDone <- false}

}
struct Mutex{}
struct MutexMngr{}
struct SyncLock{}
struct Semaphore{}
