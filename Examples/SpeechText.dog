// SpeechText.dog

LinuxBuild: Platform='Linux' CPU='amd64' Lang='CPP' optimize='speed';


Title = "Speech Text"
FileName = "speechtext"
Version = "1.0"
CopyrightMesg = "Public Domain"
Authors = "Bruce Long"
Description = "This is an example of a speech to text program"
ProgramOrLibrary = "program"

featuresNeeded = [SpeechToText]

LicenseText = `Public Domain`

runCode=`me STTx: STTx;
STTx.runTest()
`

struct STTx{
    void: runTest() <- {
        me string: hmmPackage <- "pocketsphinx/pocketsphinx/model/en-us/en-us"                  // Directory containing acoustic model files path. 
        me string: lmFilepath <- "pocketsphinx/pocketsphinx/model/en-us/en-us.lm.bin"           // Word trigram language model input file path.
        me string: dictFilepath <- "pocketsphinx/pocketsphinx/model/en-us/cmudict-en-us.dict"   // Main pronunciation dictionary (lexicon) input file path.
        me string: audioFilepath <- "assets/001.wav"                                            // Audio file path
        me string: ouputTextFilepath <- "assets/sttx.txt"                                       // Output text file path
        
        me SpeechToTextConvert: sttx                         // SpeechToTextConvert structure variable
        sttx.init(hmmPackage, lmFilepath, dictFilepath)      // init() function with model's files path
        sttx.attachStream(audioFilepath)                    // attach() function with audio file path
        sttx.analyze()                                      // analyze() function for recognition 
        sttx.getResult(ouputTextFilepath)                   // getResult() function with output text file for save result of recognition
        sttx.deinit()                                       // deinit() function for clean up objects
    }
}
